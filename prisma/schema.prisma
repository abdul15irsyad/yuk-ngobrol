// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Seeder {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now()) @map("created_at")

  @@map("seeder")
}

model Question {
  id         String   @id @default(uuid())
  question   String   @db.VarChar()
  categoryId String   @map("category_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@map("question")
}

model Category {
  id        String   @id @default(uuid())
  name      String   @db.VarChar()
  logoId    String?  @map("logo_id")
  color     String   @db.VarChar()
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  logo     File?      @relation(fields: [logoId], references: [id], onDelete: SetNull)
  Question Question[]

  @@map("category")
}

model File {
  id               String   @id @default(uuid())
  path             String   @db.VarChar()
  originalFilename String   @map("original_filename") @db.VarChar()
  filename         String   @map("filename") @db.VarChar()
  mime             String   @db.VarChar()
  size             Float    @db.Real /// size in bytes
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  Category Category[]

  @@map("file")
}
